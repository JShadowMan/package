# binding worker processes automatically to available CPUs
worker_processes     auto;
worker_cpu_affinity  auto;

# the directives that affect connection processing are specified
events {
    worker_connections  1024;
}

# https server
http {
    include mime.types;
    default_type application/octet-stream;

    server_tokens off;

    sendfile on;
    tcp_nopush on;

    keepalive_timeout 65;
    gzip on;

    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # frontend upstream definition
    upstream frontend {
        server 127.0.0.1:8080;
    }

    # backend upstream definition
    upstream backend {
        server 127.0.0.1:8081;
    }

    # auto mapping upstream
    map $http_x_server_select $pool {
         backend "backend";
         default "frontend";
    }

    # frontend server
    server {
        listen 8080;

        root /var/www/public;
        index index.html error.html;
        charset utf-8;

        # default rewrite to index.html
        location / {
            try_files $uri $uri/ /index.html /error.html;
        }

        # static resources expires
        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires       max;
            log_not_found off;
            access_log    off;
        }
    }

    # backend server
    server {
        listen 8081;

        root /var/www/public;
        index index.php;
        charset utf-8;

         location / {
             # Matches URLS `$_GET['_url']`
             try_files $uri $uri/ /index.php?_url=$uri&$args;
         }

        # php handler
        location ~ \.php$ {
            fastcgi_pass php:9000;
            include fastcgi.conf;

            fastcgi_index index.php;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }

    # http server, and redirect to https
    server {
        listen 80 default_server;

        # redirect all HTTP links to the matching HTTPS page
        return 301 https://$host$request_uri;
    }

    # main entry, https server
    server {
        listen 443 ssl;
        server_name default;

        # enable https supported
        ssl_certificate cert/server.crt;
        ssl_certificate_key cert/server.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # extra http request methods
        dav_methods PUT DELETE;

        client_max_body_size 16M;
        client_body_buffer_size 128k;
        fastcgi_read_timeout 300;

        # nginx enable hsts, 1-year
        add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;

        # select different upstreams according to X-Server-Select
        location / {
            proxy_pass http://$pool;

            # standard proxy settings
            proxy_connect_timeout 90;
            proxy_send_timeout 90;
            proxy_read_timeout 90;
            proxy_buffers 32 4k;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_redirect off;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host:$server_port;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            # wss / ws connections
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        # disallow to access apache files
        location ~ /\.ht {
            deny all;
        }
    }
}

# stay in the foreground so Docker has a process to track
daemon off;
